<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Steven Clontz]]></title>
  <link href="http://www.stevenclontz.com/atom.xml" rel="self"/>
  <link href="http://www.stevenclontz.com/"/>
  <updated>2012-12-17T11:27:06-06:00</updated>
  <id>http://www.stevenclontz.com/</id>
  <author>
    <name><![CDATA[Steven Clontz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Guessing passwords]]></title>
    <link href="http://www.stevenclontz.com/blog/2012/12/17/guessing-passwords/"/>
    <updated>2012-12-17T11:18:00-06:00</updated>
    <id>http://www.stevenclontz.com/blog/2012/12/17/guessing-passwords</id>
    <content type="html"><![CDATA[<p>There&#8217;s not any deep cryptography going on here, but since I spent 15 minutes answering this person on <a href="http://www.reddit.com/r/askmath/comments/14zzhw/i_guessed_the_password_on_my_moms_computer_snot/">/r/askmath</a>, and nobody reads /r/askmath, I&#8217;d take the time to cross-post it here.</p>

<p>The question:</p>

<blockquote>I guessed the password on my Mom&#8217;s computer. &#8220;Snot&#8221;. This isn&#8217;t relevant to anything I can think of in the last 10 years. What are the chances of my guess being correct?</blockquote>




<!-- more -->


<hr />

<p>Depends on the constraints on this password. If you knew it was exactly four lowercase letters (no numbers, no symbols), there are 26<sup>4</sup> = 456,976 possibilities. That makes it a 0.00022% chance.</p>

<p>More realistically, if you knew that the password was a four-letter Scrabble word, there are somewhere around 4,000-5,000 possibilities, so your odds just jumped to 0.02%.</p>

<p>But. If your mother was clever and mixed uppercase and lowercase letters, that increases the number of possibilities by 16 times. (Why? Multiply by two for the first letter being uppercase or lowercase, multiply by two for the second letter, and again, and again. 2*2*2*2=16.) That means we have about 80,000 possibilities, and a 0.00125% chance.</p>

<p>Of course, as soon as you throw out the four-letter constraint, the possibilities explode. But let&#8217;s keep the Scrabble word constraint. According to the <a href="http://en.wikipedia.org/wiki/Official_Tournament_and_Club_Word_List">Official Tournament and Club Word List article on Wikipedia</a> there are 178,691 Scrabble words, so we&#8217;re back down to 0.00056% for one go, and that&#8217;s assuming all-lowercase.</p>

<p>Finally, just for kicks, let&#8217;s assume all you knew is that the password is somewhere between 1 and 20 characters, and could contain lowercase, uppercase, digits 0-9, or any of the special characters !@#$%\<sup>&amp;*().</sup> That&#8217;s 72 possibilities for each character, which Wolfram Alpha informs me gives <a href="http://www.wolframalpha.com/input/?i=%5Csum_%7Bi%3D1%7D%5E%7B20%7D+72%5Ei">14,214,254,150,091,658,100,874,779,924,350,129,800</a> possibilities, with a 0.000000000000000000000000000000000000007% chance of guessing correctly.</p>

<p>tl;dr: you got lucky. But keep in mind that I&#8217;m not surprised that out of the millions of users on Reddit, someone got this lucky. After all, people win the lottery all the time - just not me.</p>

<hr />

<p>-SXC</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LaTeX is turing complete!]]></title>
    <link href="http://www.stevenclontz.com/blog/2012/12/15/latex-is-turing-complete/"/>
    <updated>2012-12-15T09:24:00-06:00</updated>
    <id>http://www.stevenclontz.com/blog/2012/12/15/latex-is-turing-complete</id>
    <content type="html"><![CDATA[<p>So, I knew <a href="http://en.wikipedia.org/wiki/LaTeX">LaTeX</a> was the best mathematical markup out there, but I didn&#8217;t realize it was Turing complete. Here&#8217;s an article that shows how to compute the Fibonacci sequence:</p>

<p><a href="http://blog.scribtex.com/latex-is-turing-complete-51805">http://blog.scribtex.com/latex-is-turing-complete-51805</a></p>

<p>Makes me wonder where I can save myself some time by having LaTeX do certain computations for me in my paper rather than doing them myself? I suppose this would likely negatively affect compile time, however.</p>

<p>-SXC</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using email addresses for Django usernames]]></title>
    <link href="http://www.stevenclontz.com/blog/2012/11/15/using-email-addresses-for-django-usernames/"/>
    <updated>2012-11-15T12:58:00-06:00</updated>
    <id>http://www.stevenclontz.com/blog/2012/11/15/using-email-addresses-for-django-usernames</id>
    <content type="html"><![CDATA[<p><a href="https://www.djangoproject.com/">Django</a> is a great Python framework for database-driven sites. It&#8217;s what we use for <a href="http://www.teloga.com">Teloga</a> in fact. But there&#8217;s one thing that bugs me: usernames are case-sensitive.</p>

<p>With Teloga busy serving both the <a href="http://www.teloga.com/networks/aubands/">Auburn University Bands</a> and the <a href="http://www.teloga.com/networks/aba/">Alabama Bandmasters Association</a>, it didn&#8217;t take too long for us to realize that this is very unintuitive for users. We received weekly emails complaining that this person couldn&#8217;t log into their account, and invariably it&#8217;d be caused by the usage of Steven@Teloga.com instead of steven@teloga.com. That had to go.</p>

<!-- more -->


<p>First things first. Before the case-sensitivity even came up, we first decided we wanted to use emails as logins. In addition, we&#8217;re going to need longer usernames than the 30 characters Django allows out of the box, since email addresses can <a href="http://email.about.com/od/emailbehindthescenes/f/address_length.htm">be up to 256 characters long</a>.</p>

<p>That&#8217;s where <a href="https://github.com/GoodCloud/django-longer-username">django-longer-username</a> comes in. It&#8217;s a really nice plugin which provides a <a href="http://south.aeracode.org/">South</a> migration for your database and tweaks all the admin forms appropriately.</p>

<p>Once we have a setup for longer usernames (we went with 75 characters as sufficient for our needs), we needed to create our own registration form. <a href="http://www.jdabbs.com">James</a> took care of this for Teloga. Here&#8217;s a sketch of what ours looks like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class RegistrationForm(forms.Form):
</span><span class='line'>    email = forms.EmailField(
</span><span class='line'>        max_length=75,  # must be 30 without longerusername
</span><span class='line'>        widget=forms.TextInput(attrs={'class': 'xlarge'}),
</span><span class='line'>        label='Email')
</span><span class='line'>    password = forms.CharField(
</span><span class='line'>        widget=forms.PasswordInput(attrs={'class': 'xlarge'}),
</span><span class='line'>        label='Password')
</span><span class='line'>    password_confirmation = forms.CharField(
</span><span class='line'>        widget=forms.PasswordInput(attrs={'class': 'xlarge'}),
</span><span class='line'>        help_text='Enter the same password as above, for verification.',
</span><span class='line'>        label='Confirm password'
</span><span class='line'>    )
</span><span class='line'>    
</span><span class='line'>    def clean_email(self):
</span><span class='line'>        """ Verifies that this email is not already in use """
</span><span class='line'>        email = self.cleaned_data['email'].lower() # Oh hey, this is important.
</span><span class='line'>        try:
</span><span class='line'>            User.objects.get(email=email)
</span><span class='line'>            raise forms.ValidationError('That email address is already associated with an account.')
</span><span class='line'>        except User.DoesNotExist:
</span><span class='line'>            return email
</span><span class='line'>
</span><span class='line'>    def clean_password_confirmation(self):
</span><span class='line'>        """ Verifies that both password fields match """
</span><span class='line'>        data = self.cleaned_data
</span><span class='line'>        pswd = data.get('password', '')
</span><span class='line'>        conf = data.get('password_confirmation', '')
</span><span class='line'>        if pswd and (pswd != conf):
</span><span class='line'>            raise forms.ValidationError("The password confirmation didn't match.")
</span><span class='line'>        return conf
</span><span class='line'>
</span><span class='line'>    def register(self):
</span><span class='line'>        """ Creates a new user object. """
</span><span class='line'>        data = self.cleaned_data
</span><span class='line'>        email = data['email']  # We will use the email address as both u.username and u.email
</span><span class='line'>        password = data['password']
</span><span class='line'>        user = User.objects.create_user(email, email=email, password=password)
</span><span class='line'>        return user</span></code></pre></td></tr></table></div></figure>


<p>I&#8217;ll draw attention to this line:</p>

<pre><code>email = self.cleaned_data['email'].lower() # Oh hey, this is important.
</code></pre>

<p>This is getting back to the point I made at first: case sensitivity for usernames sucks. Particularly when you&#8217;re dealing with emails: while it&#8217;s up to each email provider to decide if they want their email addresses to be case-sensitive, most of them make the (smart) decision to ignore capitalization. So do yourself a favor and ignore it yourself. (In our case, we didn&#8217;t at first, and had a few dozen users make duplicate accounts with various capitalizations of their email address.)</p>

<p>Now, using this form you will have users with all-lowercase email addresses set as the username. So now it&#8217;s time to get them logged in.</p>

<p>We&#8217;re actually just going to do a short adjustment to the stock AuthenticationForm. We need to make sure that the length of the username field is increased to 75, and we better make sure we clean up the username/email so that it&#8217;s all lowercase. (Otherwise you&#8217;re going to get a rightfully perturbed user complaining that they registered with Steven@Teloga.com but they cannot log in, because you stored their email as steven@teloga.com.)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>from django.contrib.auth.forms import AuthenticationForm as StockAuthenticationForm
</span><span class='line'>
</span><span class='line'>class AuthenticationForm(StockAuthenticationForm):
</span><span class='line'>    username = forms.EmailField(max_length=75, label='Email')  # requires longerusername
</span><span class='line'>    # don't forget to make the email lowercase
</span><span class='line'>    def clean_username(self):
</span><span class='line'>        u = self.cleaned_data.get('username')
</span><span class='line'>        return u.lower()</span></code></pre></td></tr></table></div></figure>


<p>So, all in all there isn&#8217;t anything too fancy here, but I was surprised I couldn&#8217;t find a walkthrough online so I thought I could whip one up. Let me know if you have any comments!</p>

<p>-SXC</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[9 Hours, 9 Persons, 9 Doors]]></title>
    <link href="http://www.stevenclontz.com/blog/2012/11/05/9-hours-9-persons-9-doors/"/>
    <updated>2012-11-05T13:33:00-06:00</updated>
    <id>http://www.stevenclontz.com/blog/2012/11/05/9-hours-9-persons-9-doors</id>
    <content type="html"><![CDATA[<p>Having spent a lot of my weekend playing it (after representing Teloga at the <a href="http://teloga.com/networks/aubands/alumni-band/fall-2012/">26th Annual Auburn Alumni Band Reunion</a>), I wanted to make a quick, mostly spoiler-free post about <a href="http://en.wikipedia.org/wiki/999:_Nine_Hours,_Nine_Persons,_Nine_Doors"><em>999: 9 Hours, 9 Persons, 9 Doors</em></a> (2010). It&#8217;s a visual novel / room escape / puzzle / adventure game for the Nintendo DS.</p>

<!-- more -->


<p><img src="http://i.imgur.com/8xVM5.jpg"></p>

<p>While I was mostly a Nintendo kid, I have fond memories of playing Sierra&#8217;s <a href="http://en.wikipedia.org/wiki/Torin's_Passage">Torin&#8217;s Passage</a> on the PC, which jump-started my interest in story-driven and combatless games. These games are also probably a big influence in my taste in <a href="http://auburnpuzzleparty.wikia.com/wiki/APP5">story-driven puzzle parties</a> as well.</p>

<p>The concept of <em>999</em> is simple: big scary guy (&#8220;Zero&#8221;) in a gas mask kidnaps you and eight other people, forces you to play a <a href="http://en.wikipedia.org/wiki/Saw_(film)">game</a>, and slaps a wristwatch on you that will kill if you break the rules rather than solve his puzzles. But the best part of the game is tough to explain without spoilers. I&#8217;ll just say: it has the best setup for alternate endings of any game I&#8217;ve played.</p>

<p>By the way, I was very impressed that the game doesn&#8217;t shy away (too) much from using math. There&#8217;s a bit of modular arithmetic involved in the game: each player has a number on their bracelet, and several doors are also marked with numbers. In order for a group to pass through a numbered door, the &#8220;digital root&#8221; of the bracelets (more commonly known as the sum of the numbers modulo nine) must match that number. This makes a major part of the story a mathematical whodunit once the group splits up early on and it&#8217;s discovered that some subset of them opened a door secretly (to a particular end which I&#8217;ll keep secret for this post).</p>

<p>I do wish the characters would have caught onto some of the slicker tricks to computing digital roots. For example, the players 1 through 9 have a digital root of 9. But if players 1 and 2 are sitting out for some reason, the group&#8217;s digital root is now 6. That means for all players to progress simultaneously, they must split up and pass through doors whose digital root is also 6. The characters make most of their conclusions through exhaustive search, but when I was faced with doors 3, 7, and 8, I quickly realized that 7 &amp; 8 (=15=6) were the only real choices. (Well, unless you wanted to leave some players behind, but who would do that?&#8230;) And the only trick then was finding a group to sum to 7 (or 16 or 25), since the other group necessarily had to sum to 8 (or 17 or 26 or etc etc).</p>

<p>Incidentally, while I keep talking about modular arithmetic, the game didn&#8217;t present it that way. Instead, they used the divisibility trick for nine to describe how to calculate a digital root: add the digits of the sum, repeat until only one digit remains. All in all, it&#8217;s a fun metapuzzle for the game. (And not bad fodder for the <a href="http://auburnpuzzleparty.wikia.com/wiki/A.M.P.%27d_Challenge">AMP&#8217;d Challenge</a> either&#8230; maybe I should flesh out an idea based on this.)</p>

<p>But about those endings. There&#8217;s a lot of discussion out there about the optimal way to play through the game. There are six (well, five and a half) endings that the game gives you credit for, and it&#8217;s tough to find them all without a little direction (which I attempted when I first played through the game two years ago). So if I may do so, and I promise not to reveal any spoilers, here are my two suggested ways to play through <em>999</em> if you have the chance to pick it up.</p>

<h3>What you should know</h3>

<p>In this game you will make three choices between which door you&#8217;d like to enter. If you get a &#8220;bad end&#8221;, which one you get is pretty much just determined on your third choice. The game intends for you to play through it multiple times and stumble upon one of the three ends which, well, aren&#8217;t so bad.</p>

<p>However, by paying attention to what interests the other characters, and figuring out which doors you need to go through to progress certain story arcs, you can arrive at one of the three more interesting ends. Realizing this might be enough for you to deduce how to proceed.</p>

<h3>The quickest way</h3>

<p>You should approach <em>999</em> more like you&#8217;re going to read a book than play a game, which means you&#8217;ll be spending a lot of time reading. And on the replays, you&#8217;ll be spending a lot of time holding Right on the D-pad to fast-forward through text you&#8217;ve already seen.</p>

<p>So that&#8217;s why I don&#8217;t blame you if you want to get through things as quickly as possible. Here are directions for seeing every puzzle and ending using minimal playthroughs:</p>

<p class="spoiler">1st. Choose the following doors: 4, 8, 1</p>




<p class="spoiler">2nd. Choose the following doors: 4, 7, 6</p>




<p class="spoiler">3rd. Choose the following doors: 5, 3, 2</p>




<p class="spoiler">4th. Choose the following doors: 5, 8, 6</p>


<p>At this point, you may want to try and solve the puzzle of which path to take for your final ending. Pay close attention to a hint given at the end of the last ending.</p>

<p class="spoiler">Last. Choose the following doors: 4, 7, 1. This unlocks the final two endings (one of which is where the game cuts off this ending early if you haven&#8217;t done the 5, 8, 6 ending). Also, you need to be sure to learn everything you can from the other characters, and help them out where you can, or certain story checks will fail and you&#8217;ll get the same ending as choosing 4, 8, 1.</p>


<h3>A little bit longer</h3>

<p>This is a streamlined version how I ended up playing my first time with the game. There&#8217;s more backtracking, but you get to actually experience that &#8220;half&#8221; ending I keep talking about.</p>

<p class="spoiler">1st. Choose the following doors: 4, 8, 6</p>




<p class="spoiler">2nd. Choose the following doors: 5, 3, 2</p>




<p class="spoiler">3rd. Choose the following doors: 4, 7, 1. However, refuse to listen to optional plot points and don&#8217;t help the other characters when possible.</p>




<p class="spoiler">4th. Choose the following doors again: 4, 7, 1. This time, listen to everything and help a certain person out.</p>


<p>At this point, you may want to try and solve the puzzle of which path to take for your next ending. Pay close attention to a hint given at the end of the last ending.</p>

<p class="spoiler">5th. Choose the following doors: 5, 8, 6</p>




<p class="spoiler">Last. Choose the following doors a final time: 4, 7, 1. Again, listen to everything and help a certain person out. Enjoy the epiphany.</p>


<h3>And every other combination</h3>

<p>I ran across this image on Reddit, which maps out all the possible paths and endings. Pretty cool to look over once you&#8217;ve seen them all yourself: <a href="http://i.imgur.com/amjI5.gif">http://i.imgur.com/amjI5.gif</a></p>

<p>That&#8217;s all I&#8217;ve got. If you&#8217;ve gotten this far then I assume you&#8217;ve played the game or plan to. But if not, and you think you&#8217;d enjoy this psychological thriller, then I encourage you to give it a try! (Also, the sequel came out&#8230; maybe I&#8217;ll have time to play it one day, heh.)</p>

<p>-SXC</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Marked-down resume]]></title>
    <link href="http://www.stevenclontz.com/blog/2012/10/28/resume-now-online/"/>
    <updated>2012-10-28T23:30:00-05:00</updated>
    <id>http://www.stevenclontz.com/blog/2012/10/28/resume-now-online</id>
    <content type="html"><![CDATA[<p>A project that had been almost as long overdue as reviving <a href="http://www.stevenclontz.com">http://www.stevenclontz.com</a> was updating my neglected resume.</p>

<p>The tl;dr version: check it out at <a href="http://resume.stevenclontz.com">http://resume.stevenclontz.com</a>! But if you think that looks nice and would like to check out the web app that powers it, please read on. :-)</p>

<!-- more -->


<p>I knew I wanted my resume to be web-first. The last time I wrote a resume (back in early 2011) I had TeX&#8217;d it up locally. And hey, at least that&#8217;s better than a Word document, right? However, and maybe I&#8217;ve gotten lazier in the past two years&#8230; but trudging through this didn&#8217;t seem appealing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\begin{ressection}{Education}
</span><span class='line'>    \begin{ressubsec}{Auburn University}{Auburn, AL}{Bachelor's of Science and Master of Science in Mathematics}
</span><span class='line'>        \ressubitem{Undergraduate GPA: 3.88 (overall), 4.00 (Major)}
</span><span class='line'>        \ressubitem{Undergraduate Graduation Date: May, 2008 (Summa Cum Laude, University Honors Scholar)}
</span><span class='line'>        \ressubitem{Masters GPA: 4.00}
</span><span class='line'>        \ressubitem{Masters Graduation Date: December, 2010}
</span><span class='line'>        \ressubitem{Currently pursuing Doctor of Philosophy in Mathematics at Auburn}
</span><span class='line'>    \end{ressubsec}
</span><span class='line'>\end{ressection}</span></code></pre></td></tr></table></div></figure>


<p>So began my search for a simpler way. My first instinct was <a href="http://daringfireball.net/projects/markdown/">Markdown</a> - it&#8217;s what <a href="http://www.teloga.com">Teloga</a> uses, it&#8217;s what <a href="http://www.reddit.com">Reddit</a> uses, heck, it&#8217;s what this blog uses. And certainly this markup is a lot friendlier to read and edit:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>##Education
</span><span class='line'>
</span><span class='line'>####Auburn University - Auburn, AL
</span><span class='line'>
</span><span class='line'>* Bachelor's of Science in Mathematics (2008)
</span><span class='line'>    * 3.9 overall GPA | 4.0 major GPA
</span><span class='line'>    * Summa Cum Laude | University Honors Scholar | Phi Kappa Phi | Phi Beta Kappa 
</span><span class='line'>    * Honors thesis in unfoldings of convex polyhedra | Undergraduate Research Fellow
</span><span class='line'>* Master of Science in Mathematics (2010)
</span><span class='line'>    * 4.0 GPA
</span><span class='line'>    * Master thesis in linearly ordered topological spaces
</span><span class='line'>* Doctoral Candidate in Mathematics
</span><span class='line'>    * Currently writing dissertation on limited information strategies in topological games</span></code></pre></td></tr></table></div></figure>


<p>So I thought the simple thing to do would be to just make a page on this blog for the resume. And when I did, it didn&#8217;t look half bad either.</p>

<p><img src="http://i.imgur.com/U6xQ4.png"></p>

<p>The only problem&#8230; I&#8217;d probably need a PDF version as well, and maybe even have to print it at some point. Silly old media.</p>

<p>Now, keeping multiple copies of the same resume definitely violates <a href="http://en.wikipedia.org/wiki/Don't_repeat_yourself">DRY</a>; I wanted a slicker solution. So my first idea was to just print the webpage from Chrome and save it as a PDF.</p>

<p><img src="http://i.imgur.com/kdRdF.png"></p>

<p>Yikes.</p>

<p>So, the issue that Octopress&#8217;s default theme doesn&#8217;t have a nice print stylesheet is a topic for another day, but I figured there was someone else out there of a similar mind that would have already paved the way for a nice way to share a resume written in Markdown.</p>

<p>As it often does, the Google helped me find an answer earlier today: <a href="http://pseudoweb.net/2010/10/25/developing-your-resume/">http://pseudoweb.net/2010/10/25/developing-your-resume/</a></p>

<p><img src="http://i.imgur.com/nAmTh.png"></p>

<p>Looks nice, and it prints well too. Incidentally, Mr. Welch&#8217;s resume app makes use of this very cool Ruby gem called <a href="http://www.sinatrarb.com/">Sinatra</a> which I may need to look more into for simple apps. I&#8217;m new to Ruby (hey maybe I can add it to my resume now though) but hacking his app to do what I wanted was pretty straight forward.</p>

<p>I added a few extra variables to the configuration YAML to store the URL of the page itself and the URL of a QR Code image leading to that URL, which I use in a couple of nice extra features:</p>

<ol>
<li>If the page is printed, it adds a line to the top: &#8220;Optimized for web | http://resume_url&#8221;</li>
<li>A QR code floats in the upper right of the page, also linking to the digital version of the resume.</li>
</ol>


<p><img src="http://i.imgur.com/2WrpD.png"></p>

<p>You can see it in action at <a href="http://resume.stevenclontz.com">my resume page</a>, and my forked version of the app can be found <a href="https://github.com/StevenClontz/Resume">on my Github</a>.</p>

<p>There are still a couple of tweaks that might be nice to have if I decide to work on this more later.</p>

<ul>
<li>It&#8217;d be preferable to have a script to burn a PDF from the resume.md Markdown file rather than using a browser printout, possibly leveraging LaTeX.</li>
<li>A simple change would be to move some of the basic data (name, address, etc.) into the configuration file to standardize the header.</li>
</ul>


<p>In the meantime, I hope you found all this interesting, and maybe I&#8217;ve inspired you to use revision control and Markdown to maintain your own resume!</p>

<p>-SXC</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Auburn Puzzle Party 5]]></title>
    <link href="http://www.stevenclontz.com/blog/2012/10/28/auburn-puzzle-party-5/"/>
    <updated>2012-10-28T23:11:00-05:00</updated>
    <id>http://www.stevenclontz.com/blog/2012/10/28/auburn-puzzle-party-5</id>
    <content type="html"><![CDATA[<p>In case you hadn&#8217;t heard me talk about it yet, <a href="http://auburnpuzzleparty.wikia.com/wiki/APP5_Wrap-Up">here&#8217;s my wrap-up of Auburn Puzzle Party 5</a> on the Auburn Puzzle Party wiki.</p>

<p>And if you haven&#8217;t checked out the <a href="http://www.youtube.com/playlist?list=PLooILs0YfKkEWPeFpZdDis2GuQ2aP-weO">APP5 videos, including the Puzzle Rock Anthem</a> yet, you&#8217;re missing out. See if you can solve the &#8220;hidden&#8221; puzzle in the videos too.</p>

<p>-SXC</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New blog powered by Octopress]]></title>
    <link href="http://www.stevenclontz.com/blog/2012/10/25/new-blog-powered-by-octopress/"/>
    <updated>2012-10-25T08:40:00-05:00</updated>
    <id>http://www.stevenclontz.com/blog/2012/10/25/new-blog-powered-by-octopress</id>
    <content type="html"><![CDATA[<p>Hey everyone! Thanks for checking out my new blog*. After deciding I didn&#8217;t need to waste so much cash on domain names I don&#8217;t use and web space I barely needed, I took down stevenclontz.com along with most of my other old PHP/Wordpress sites. I&#8217;ll get stevenclontz.com to point here sometime soon.</p>

<p>Thanks to <a href="http://jdabbs.com">James Dabbs</a> for showing <a href="http://octopress.org/">Octopress</a> to me the other day - a blogging system with <a href="http://git-scm.com/">Git</a> revision control and hosting by <a href="http://heroku.com">Heroku</a> sounds alright to me.</p>

<p>I&#8217;ll be working on my <a href="http://www.stevenclontz.com/about/">About</a> page and getting my <a href="http://resume.stevenclontz.com">Resume</a> up to date over the coming days.  Email me at <a href="&#109;&#97;&#105;&#x6c;&#116;&#x6f;&#x3a;&#115;&#x74;&#101;&#118;&#x65;&#x6e;&#46;&#x63;&#x6c;&#x6f;&#x6e;&#116;&#x7a;&#x40;&#x67;&#109;&#97;&#x69;&#108;&#x2e;&#99;&#111;&#109;">&#115;&#116;&#101;&#118;&#x65;&#110;&#x2e;&#99;&#108;&#111;&#110;&#x74;&#x7a;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a> if you need to get in touch with me! See ya.</p>

<p>-SXC</p>

<p><small>*Is this sentence obligatory for a first blog post? I almost always see it, and it sounded awkward not to include it. Thanks again I guess. :-)</small></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello world]]></title>
    <link href="http://www.stevenclontz.com/blog/2012/10/24/hello-world/"/>
    <updated>2012-10-24T14:13:00-05:00</updated>
    <id>http://www.stevenclontz.com/blog/2012/10/24/hello-world</id>
    <content type="html"><![CDATA[<p>I am learning about Octopress here. Hiya everyone.</p>
]]></content>
  </entry>
  
</feed>
